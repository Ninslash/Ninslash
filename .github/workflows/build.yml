name: Build

on: [push, pull_request]

jobs:
  build-bam:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest, ubuntu-18.04]
        include:
        - os: ubuntu-latest
          cmake-args: -G "Unix Makefiles"
          build-args: --parallel
          package-file: Ninslash-*-linux_x86_64.tar.xz
          env:
            CFLAGS: -Wdeclaration-after-statement -Werror
            CXXFLAGS: -Werror
        - os: ubuntu-18.04
          cmake-path: /usr/bin/
          cmake-args: -G "Unix Makefiles"
          package-file: Ninslash-*-linux_x86_64.tar.xz
          env:
            CFLAGS: -Wdeclaration-after-statement -Werror
            CXXFLAGS: -Werror
        - os: macOS-latest
          cmake-args: -G "Unix Makefiles"
          build-args: --parallel
          package-file: Ninslash-*-osx.dmg
          env:
            CFLAGS: -Wdeclaration-after-statement -Werror
            CXXFLAGS: -Werror
        - os: windows-latest
          cmake-args: -A x64
          package-file: Ninslash-*-win64.zip
          env:
            CFLAGS: /WX
            CXXFLAGS: /WX
            LDFLAGS: /WX

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Checkout bam
      uses: actions/checkout@v2
      with:
        repository: matricks/bam
        ref: 8cd08744c37666830d439ab54016c9d228c63b68
        path: ./bam

    - name: Prepare Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install bam git libfreetype6-dev libsdl2-dev libpnglite-dev libwavpack-dev python3 libicu-dev -y
      
    - name: Prepare MacOS
      if: contains(matrix.os, 'macOS')
      run: |
        brew update
        brew install pkg-config sdl2 bam
        
    - name: Build in debug mode
      run: bam debug
    - name: Test debug
      run: ./ninslash_srv_d shutdown

    - name: Package(Linux)
      if: contains(matrix.os, 'ubuntu')
      run: |
        tar -cf ${{ matrix.package-full-file }} ninslash_srv_d ninslash_d data cfg
        
    - name: Package(Linux)
      if: contains(matrix.os, 'macOS')
      run: |
        tar -cf ${{ matrix.package-full-file }} ninslash_srv_d ninslash_d data cfg
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2-preview
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.package-full-file }}
